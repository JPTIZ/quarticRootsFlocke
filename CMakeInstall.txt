if(INSTALL_HERE)
  # install in the home of the whole project
  if ( ${CMAKE_HOME_DIRECTORY} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR} )
    set(INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/lib")
  else()
    set(INSTALL_PREFIX "${CMAKE_HOME_DIRECTORY}/lib3rd")
  endif()
  set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include")
else()
  set(INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
  set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include/${PROJECT_NAME}")
endif()

MESSAGE(STATUS "-- CMAKE_HOME_DIRECTORY      = ${CMAKE_HOME_DIRECTORY}")
MESSAGE(STATUS "-- CMAKE_CURRENT_SOURCE_DIR  = ${CMAKE_CURRENT_SOURCE_DIR}")
MESSAGE(STATUS "-- INSTALL_PREFIX            = ${INSTALL_PREFIX}")
MESSAGE(STATUS "-- PUBLIC_HEADER_DESTINATION = ${PUBLIC_HEADER_DESTINATION}")

set(INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_INCLUDEDIR}")

set(PACKAGE_CONFIG_PATH_PREFIX "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}")
set(PACKAGE_CONFIG_PATH "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake")
set(PACKAGE_CONFIG_VERSION_PATH "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake")

function(generate_project_config_cmake PROJECT_VERSION)
    configure_package_config_file(
      QuarticConfig.cmake.in "${PACKAGE_CONFIG_PATH}"
      INSTALL_DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}/cmake"
      PATH_VARS INCLUDE_INSTALL_DIR
    )

    write_basic_package_version_file(
      "${PACKAGE_CONFIG_VERSION_PATH}"
      VERSION "${PROJECT_VERSION}"
      COMPATIBILITY SameMajorVersion
    )
endfunction()

generate_project_config_cmake("${PROJECT_VERSION}")

set(INSTALL_TARGETS ${STATIC_PROJECT})
if(BUILD_SHARED)
  set(INSTALL_TARGETS ${INSTALL_TARGETS} ${DYNAMIC_PROJECT})
endif()
install(
  TARGETS ${INSTALL_TARGETS}
  RUNTIME DESTINATION "${INSTALL_PREFIX}/bin"
  ARCHIVE DESTINATION "${INSTALL_PREFIX}/lib"
  LIBRARY DESTINATION "${INSTALL_PREFIX}/dll"
  PUBLIC_HEADER DESTINATION "${PROJECT_PUBLIC_HEADER_DESTINATION}"
)

install(
  FILES "${PACKAGE_CONFIG_PATH}"
        "${PACKAGE_CONFIG_VERSION_PATH}"
  DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}/cmake"
)

if(INSTALL_HERE)
  add_custom_command(
    TARGET ${STATIC_PROJECT} POST_BUILD
    COMMAND cmake --build . --config Release  --target install
  )
endif()
