if(INSTALL_HERE)
  # install in the home of the whole project
  if ( ${CMAKE_HOME_DIRECTORY} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR} )
    set(INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/lib")
  else()
    set(INSTALL_PREFIX "${CMAKE_HOME_DIRECTORY}/lib3rd")
  endif()
  set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include")
else()
  set(INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
  set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include/${PROJECT_NAME}")
endif()

#MESSAGE( STATUS "\n\n\nCMAKE_HOME_DIRECTORY     = ${CMAKE_HOME_DIRECTORY}\n\n\n")
#MESSAGE( STATUS "\n\n\nCMAKE_CURRENT_SOURCE_DIR = ${CMAKE_CURRENT_SOURCE_DIR}\n\n\n")
#MESSAGE( STATUS "\n\n\nINSTALL_PREFIX           = ${INSTALL_PREFIX}\n\n\n")
MESSAGE(STATUS "\n\n\nPUBLIC_HEADER_DESTINATION           = ${PUBLIC_HEADER_DESTINATION}\n\n\n")

set(INCLUDE_INSTALL_DIR "${PROJECT_PUBLIC_HEADER_DESTINATION}")

set(PACKAGE_CONFIG_PATH_PREFIX "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}")
set(PACKAGE_CONFIG_PATH "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake")
set(PACKAGE_CONFIG_VERSION_PATH "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake")

configure_package_config_file(
  QuarticConfig.cmake.in "${PACKAGE_CONFIG_PATH}"
  INSTALL_DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}"
  PATH_VARS INCLUDE_INSTALL_DIR
)

write_basic_package_version_file(
  "${PACKAGE_CONFIG_VERSION_PATH}"
  VERSION "${VERSION}"
  COMPATIBILITY SameMajorVersion
)

set(INSTALL_TARGETS ${STATIC_PROJECT})
if(BUILD_SHARED)
  set(INSTALL_TARGETS ${INSTALL_TARGETS} ${DYNAMIC_PROJECT})
endif()
install(
  TARGETS ${INSTALL_TARGETS}
  RUNTIME DESTINATION "${INSTALL_PREFIX}/bin"
  ARCHIVE DESTINATION "${INSTALL_PREFIX}/lib"
  LIBRARY DESTINATION "${INSTALL_PREFIX}/dll"
  PUBLIC_HEADER DESTINATION "${PROJECT_PUBLIC_HEADER_DESTINATION}"
)

install(
  FILES "${PACKAGE_CONFIG_PATH}"
        "${PACKAGE_CONFIG_VERSION_PATH}"
  DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}"
)

if(INSTALL_HERE)
  add_custom_command(
    TARGET ${STATIC_PROJECT} POST_BUILD
    COMMAND cmake --build . --config Release  --target install
  )
endif()
